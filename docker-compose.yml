services:
  # Frontend
  blog-frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: keykomi-blog-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - blog-network
    restart: unless-stopped
    volumes:
      - ./public:/app/public:ro

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: keykomi-blog-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # Uncomment for SSL
      # - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - blog-frontend
    networks:
      - blog-network
    restart: unless-stopped

  # DB
  postgres:
    image: postgres:17-alpine
    container_name: keykomi-blog-postgres
    environment:
      - POSTGRES_USER=blog_user
      - POSTGRES_PASSWORD=blog_password
      - POSTGRES_DB=blog_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - blog-network
    restart: unless-stopped

networks:
  blog-network:
    driver: bridge

volumes:
  postgres_data: